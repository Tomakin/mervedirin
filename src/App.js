import React, { useState } from 'react';
import Question from './Question';
import './App.css';

const questions = [

  {
    question: 'AÅŸaÄŸÄ±daki ÅŸarkÄ±yÄ± sadece senin iÃ§in sÃ¶yleyip editledim, dinlemeden geÃ§me!',
    mediaType: 'video',
    mediaUrl: 'https://www.youtube.com/watch?v=UWeLHM254Eg',
    isQuestion: false
  },
  {
    question: 'UmarÄ±m yÃ¼zÃ¼nÃ¼ gÃ¼ldÃ¼rebilmiÅŸimdir. Ã‡Ã¼nkÃ¼ gÃ¼lÃ¼nce Ã§ok gÃ¼zel oluyorsun ðŸ˜Š',
    mediaType: 'image',
    mediaUrl: './assets/cutie.jpg',
    isQuestion: false
  },
  {
    question: 'YaÄŸmurda, Ã§amurda birbirimizi koruduÄŸumuz gÃ¼nlere ve sana bayÄ±lÄ±yorum.',
    mediaType: 'image',
    mediaUrl: './assets/yagmur.jpg',
    isQuestion: false
  },
  {
    question: 'Seninle uzaklara bakarken kurduÄŸumuz hayaller, o kadar gÃ¼zel ve keyifli ki... Her anÄ± seninle paylaÅŸÄ±yor olmak, geleceÄŸi birlikte hayal etmek... Bu, benim en bÃ¼yÃ¼k mutluluÄŸum.',
    mediaType: 'image',
    mediaUrl: './assets/kopru.jpg',
    isQuestion: false
  },
  {
    question: 'En ÅŸÄ±k hallerimde seninle olmak, en mutlu anlarÄ±mÄ± seninle yaÅŸamak... Seninle her gÃ¼n, her an daha gÃ¼zel.',
    mediaType: 'image',
    mediaUrl: './assets/buyuk_ada.jpg',
    isQuestion: false
  },
  {
    question: 'YanÄ±nda saÃ§malamak, en tatlÄ± anime karakterlerimize dÃ¶nÃ¼ÅŸmekâ€¦ SanÄ±rÄ±m hayatÄ±n en renkli anlarÄ±, seninle yapÄ±lan Ã§Ä±lgÄ±nlÄ±klarda gizli.',
    mediaType: 'image',
    mediaUrl: './assets/anime.jpg',
    isQuestion: false
  },
  {
    question: 'Romantiklik buraya kadar... KapÄ±nÄ±n Ã¶nÃ¼nde ÅŸÃ¶yle bir kedi gÃ¶rdÃ¼m. Birlikte sevmeye gidelim mi?? NOLURRRðŸ¥º DÃ¶nersen ben yine buradayÄ±m :)',
    mediaType: 'image',
    mediaUrl: './assets/kedi.jpg',
    isQuestion: false
  },
  {
    question: 'Evet dediÄŸini farz ediyor ve umuyorum. Sonsuza kadar mutlu olalÄ±m sevgilim :)',
    mediaType: 'image',
    mediaUrl: './assets/abdest.jpg',
    isQuestion: false,
    isAbdest: true
  }
];

const App = () => {
  const [currentQuestion, setCurrentQuestion] = useState(0);
  const [lastQues, setLastQues] = useState(false);


  const handleAnswer = () => {
    debugger;
    if (currentQuestion + 1 < questions.length) {
      setCurrentQuestion(currentQuestion + 1);
    } else {
      setLastQues(true);
    }
  };

  return (
    <div className="question-container">
      {currentQuestion < questions.length ? (
        <div>
          <Question
            questionModel={questions[currentQuestion]}
            onAnswer={handleAnswer}
            lastQues={lastQues}
          />
        </div>

      ) : (
        <h2>TÃ¼m sorulara cevap verdiniz!</h2>
      )}
    </div>
  );
};

export default App;